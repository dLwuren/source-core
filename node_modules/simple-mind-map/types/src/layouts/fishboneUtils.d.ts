declare namespace _default {
    namespace top {
        function renderExpandBtn({ node, btn, expandBtnSize, translateX, translateY, width, height }: {
            node: any;
            btn: any;
            expandBtnSize: any;
            translateX: any;
            translateY: any;
            width: any;
            height: any;
        }): void;
        function renderExpandBtn({ node, btn, expandBtnSize, translateX, translateY, width, height }: {
            node: any;
            btn: any;
            expandBtnSize: any;
            translateX: any;
            translateY: any;
            width: any;
            height: any;
        }): void;
        function renderLine({ node, line, top, x, lineLength, height, expandBtnSize, maxy, ctx }: {
            node: any;
            line: any;
            top: any;
            x: any;
            lineLength: any;
            height: any;
            expandBtnSize: any;
            maxy: any;
            ctx: any;
        }): void;
        function renderLine({ node, line, top, x, lineLength, height, expandBtnSize, maxy, ctx }: {
            node: any;
            line: any;
            top: any;
            x: any;
            lineLength: any;
            height: any;
            expandBtnSize: any;
            maxy: any;
            ctx: any;
        }): void;
        function computedLeftTopValue({ layerIndex, node, ctx }: {
            layerIndex: any;
            node: any;
            ctx: any;
        }): void;
        function computedLeftTopValue({ layerIndex, node, ctx }: {
            layerIndex: any;
            node: any;
            ctx: any;
        }): void;
        function adjustLeftTopValueBefore({ node, parent, ctx, layerIndex }: {
            node: any;
            parent: any;
            ctx: any;
            layerIndex: any;
        }): void;
        function adjustLeftTopValueBefore({ node, parent, ctx, layerIndex }: {
            node: any;
            parent: any;
            ctx: any;
            layerIndex: any;
        }): void;
        function adjustLeftTopValueAfter({ parent, node, ctx }: {
            parent: any;
            node: any;
            ctx: any;
        }): void;
        function adjustLeftTopValueAfter({ parent, node, ctx }: {
            parent: any;
            node: any;
            ctx: any;
        }): void;
    }
    namespace bottom {
        function renderExpandBtn({ node, btn, expandBtnSize, translateX, translateY, width, height }: {
            node: any;
            btn: any;
            expandBtnSize: any;
            translateX: any;
            translateY: any;
            width: any;
            height: any;
        }): void;
        function renderExpandBtn({ node, btn, expandBtnSize, translateX, translateY, width, height }: {
            node: any;
            btn: any;
            expandBtnSize: any;
            translateX: any;
            translateY: any;
            width: any;
            height: any;
        }): void;
        function renderLine({ node, line, top, x, lineLength, height, miny, ctx }: {
            node: any;
            line: any;
            top: any;
            x: any;
            lineLength: any;
            height: any;
            miny: any;
            ctx: any;
        }): void;
        function renderLine({ node, line, top, x, lineLength, height, miny, ctx }: {
            node: any;
            line: any;
            top: any;
            x: any;
            lineLength: any;
            height: any;
            miny: any;
            ctx: any;
        }): void;
        function computedLeftTopValue({ layerIndex, node, ctx }: {
            layerIndex: any;
            node: any;
            ctx: any;
        }): void;
        function computedLeftTopValue({ layerIndex, node, ctx }: {
            layerIndex: any;
            node: any;
            ctx: any;
        }): void;
        function adjustLeftTopValueBefore({ node, ctx, layerIndex }: {
            node: any;
            ctx: any;
            layerIndex: any;
        }): void;
        function adjustLeftTopValueBefore({ node, ctx, layerIndex }: {
            node: any;
            ctx: any;
            layerIndex: any;
        }): void;
        function adjustLeftTopValueAfter({ parent, node, ctx }: {
            parent: any;
            node: any;
            ctx: any;
        }): void;
        function adjustLeftTopValueAfter({ parent, node, ctx }: {
            parent: any;
            node: any;
            ctx: any;
        }): void;
    }
}
export default _default;
